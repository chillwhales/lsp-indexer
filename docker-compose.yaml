services:
  sqd-indexer:
    build:
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    network_mode: service:tailscale
    depends_on:
      postgres:
        condition: service_healthy
      graphql:
        condition: service_healthy
    environment:
      - DB_URL
      - RPC_URL
      - HASURA_GRAPHQL_ENDPOINT
      - HASURA_GRAPHQL_ADMIN_SECRET

  postgres:
    image: postgres:17-alpine
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - /mnt/sqd-indexer/postgres:/var/lib/postgresql/data
    networks:
      sqd_network:
        ipv4_address: ${POSTGRES_STATIC_IP} # E.g. 172.50.0.1
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - /mnt/sqd-indexer/pgadmin:/var/lib/pgadmin
    networks:
      sqd_network:
    ports:
      - ${PGADMIN_PORT}:80
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD

  graphql:
    image: hasura/graphql-engine:v2.46.0
    ports:
      - ${HASURA_GRAPHQL_PORT}:8080
    restart: unless-stopped
    networks:
      sqd_network:
        ipv4_address: ${GRAPHQL_STATIC_IP} # E.g. 172.50.0.2
    environment:
      - PG_DATABASE_URL
      - HASURA_GRAPHQL_DATABASE_URL
      - HASURA_GRAPHQL_METADATA_DATABASE_URL
      - HASURA_GRAPHQL_ADMIN_SECRET
      - HASURA_GRAPHQL_ENABLE_CONSOLE
      - HASURA_GRAPHQL_DEV_MODE
      - HASURA_GRAPHQL_ENABLED_LOG_TYPES
      - HASURA_GRAPHQL_METADATA_DEFAULTS
      - HASURA_GRAPHQL_UNAUTHORIZED_ROLE
    depends_on:
      postgres:
        condition: service_healthy
      data-connector-agent:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/healthz']
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s

  data-connector-agent:
    image: hasura/graphql-data-connector:v2.46.0
    restart: unless-stopped
    environment:
      QUARKUS_LOG_LEVEL: ERROR
      QUARKUS_OPENTELEMETRY_ENABLED: 'false'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8081/api/v1/athena/health']
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s

  tailscale:
    image: tailscale/tailscale:latest
    restart: unless-stopped
    networks:
      sqd_network:
    environment:
      - TS_AUTHKEY
      - TS_EXTRA_ARGS
      - TS_STATE_DIR
      - TS_USERSPACE
      - TS_HOSTNAME
      - TS_ACCEPT_DNS
    volumes:
      - /mnt/sqd-indexer/tailscale:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
      - SYS_MODULE

networks:
  sqd_network:
    ipam:
      driver: default
      config:
        - subnet: ${DOCKER_SUBNET}
